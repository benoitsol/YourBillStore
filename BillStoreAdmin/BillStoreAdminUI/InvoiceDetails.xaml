<UserControl x:Class="BillStoreAdminUI.InvoiceDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BillStoreAdminUI"
             mc:Ignorable="d" Height="478" Width="665">
    <UserControl.Resources>
        <Style x:Key="Label" TargetType="{x:Type Label}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>
        <Style x:Key="CustTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">            
            <Style.Triggers>                
                <Trigger Property="Validation.HasError" Value="true">                    
                    <Setter Property="ToolTip"
                 Value="{Binding RelativeSource={RelativeSource Self},
                   Path=(Validation.Errors)[0].ErrorContent}"/>                    
                </Trigger>                
            </Style.Triggers>            
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,0,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="665*"/>
            <ColumnDefinition Width="Auto"/>           
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel  Orientation="Horizontal" Margin="2,2,2,0" Height="36" VerticalAlignment="Top" Background="Transparent">
            <Label Content="Invoice details" HorizontalContentAlignment="Center" FontFamily="verdana" FontSize="16" Foreground="Gray" VerticalContentAlignment="Stretch" Width="600" />
        </StackPanel>
        <Grid x:Name="existingCustomerGrid" Grid.Row="1" HorizontalAlignment="Left" Margin="5,5,0,0" Visibility="Visible" VerticalAlignment="Top" Background="White" Width="650">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="280"/>
                <ColumnDefinition Width="Auto" MinWidth="280"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Phone Number:" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="CustomerPhone"  Grid.Row="0" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Address"  Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="Address"  Grid.Row="1" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Seller Name:"  Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="sellerNameTextBox" Grid.Row="2" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.SellerName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Gst Number:"  Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="SellerGstNumber" Grid.Row="3" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.SellerGstNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Seller Phone:" Grid.Row="4" Style="{StaticResource Label}"/>
            <TextBox x:Name="addressTextBox" Grid.Row="4" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Amount:" Grid.Column="1" Grid.Row="0"  Style="{StaticResource Label}"/>
            <TextBox x:Name="BillAmount" Grid.Column="1" Grid.Row="0" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.NetAmount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Discount:" Grid.Column="1" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="totalDisCountTextBox" Grid.Column="1" Grid.Row="1" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.TotalDisCount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Net Amount:" Grid.Column="1" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="netAmountTextBox" Grid.Column="1" Grid.Row="2" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.NetAmount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Tax:" Grid.Column="1" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="totalGstAmountTextBox" Grid.Column="1" Grid.Row="3" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.TotalGstAmount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Gross Amount:" Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" Style="{StaticResource Label}"/>
            <TextBox x:Name="grossAmountTextBox" Grid.Column="1" Grid.Row="4" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.GrossAmount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Payment Mode:" Grid.Column="1" Grid.Row="5" Style="{StaticResource Label}" Height="28" Margin="3,0,0,4"/>
            <TextBox x:Name="modeOfPaymentTextBox" Grid.Column="1" Grid.Row="5" Style="{StaticResource CustTextBox}"   
                  Text="{Binding Invoice.ModeOfPayment, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
        </Grid>
        <StackPanel  Grid.Row="2" Orientation="Horizontal"   VerticalAlignment="Top" Background="White">
            <Button Content="AddItems" Style="{StaticResource ResourceKey=BaseButtonStyle}"
                    VerticalAlignment="Center" HorizontalAlignment="Center"
                    Command="{Binding AddItemsCommand}"/>
        </StackPanel>
        <DataGrid x:Name="ordersDataGrid" SelectionUnit="Cell" SelectionMode="Single" AutoGenerateColumns="False" IsEnabled="True"
                  EnableRowVirtualization="True" Width="auto" ItemsSource="{Binding Items}"
                    Grid.Row="3" RowDetailsVisibilityMode="VisibleWhenSelected">
            <DataGrid.Columns>
                <DataGridTemplateColumn  Header="Code" MinWidth="45">                    
                    <DataGridTemplateColumn.CellTemplate>                        
                        <DataTemplate>                            
                            <TextBlock Style="{StaticResource TextBlockStyle}"
                                       Text="{Binding Path=ItemCode,  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                                NotifyOnValidationError=True}"/>                            
                        </DataTemplate>                        
                    </DataGridTemplateColumn.CellTemplate>  
                    <DataGridTemplateColumn.CellEditingTemplate>                        
                        <DataTemplate>
                            <TextBox Text="{Binding ItemCode, UpdateSourceTrigger=PropertyChanged}"/>                            
                        </DataTemplate>                        
                    </DataGridTemplateColumn.CellEditingTemplate>                    
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  Header="Item Name" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Style="{StaticResource TextBlockStyle}"
                                       Text="{Binding Path=ItemName,  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                                NotifyOnValidationError=True}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=ItemName, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>               
                <DataGridTextColumn x:Name="QuantityColumn" Binding="{Binding Quantity}" Header="Quantity" Width="60"/>
                <DataGridTextColumn x:Name="DiscountColumn" Binding="{Binding Discount}" Header="Discount" Width="60"/>
                <DataGridTextColumn x:Name="gstColumn" Binding="{Binding TaxPercent}" Header="GST" Width="60"/>
                <DataGridTextColumn x:Name="taxAmountColumn" Binding="{Binding TaxAmount}" Header="GST Amount" Width="80"/>
                <DataGridTextColumn x:Name="netAmountColumn" Binding="{Binding NetAmount}" Header="NET Amount" Width="80"/>
                <DataGridTextColumn x:Name="grossAmount" Binding="{Binding GrossAmount}" Header="Gross Amount" Width="100"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel  Grid.Row="4" Grid.Column="0" Margin="20" Orientation="Horizontal" Background="White">
            <Button Content="Add Invoice" Height="36" Width="100" Style="{StaticResource BaseButtonStyle}"
                    VerticalAlignment="Top" HorizontalContentAlignment="Center"
                    Command="{Binding AddInvoiceCommand}"></Button>
        </StackPanel>
    </Grid>
</UserControl>
